# frozen_string_literal: true

module <%= test_kit_module_name %>
  class <%= class_name %> < Inferno::Test
    title 'Server returns <%= title %> resource that matches the <%= title %> profile'
    description %(
      This test will validate that the <%= title %> resource returned from the server matches the <%= title %> profile.
    )
    id :<%= test_id %>
    <% if optional? %>
    optional
    <% end %>
    uses_request :summary_operation

    run do
      initial_bundle = resource
      <% if profil_url %>
      existing_resources = initial_bundle.entry.map(&:resource).select do |r|
        r.resourceType == '<%= resource_type %>' && r.meta&.profile&.include?('<%= profile_url %>')
      end
      <% else %>
      existing_resources = initial_bundle.entry.map(&:resource).select do |r|
        r.resourceType == '<%= resource_type %>'
      end
      <% end %>
      existing_resources = initial_bundle.entry.map(&:resource).select do |r|
        r.resourceType == '<%= resource_type %>' && r.meta&.profile&.include?('<%= profile_url %>')
      end

      skip_if existing_resources.empty?, "No existing resources of type '<%= resource_type %>' with profile '<%= profile_url %>' found."

      existing_resources.each do |r|
        <% if profil_url %>
        assert_valid_resource(resource: r, profile_url: '<%= profile_url %>')
        <% else %>
        assert_valid_resource(resource: r)
        <% end %>
      end
    end
  end
end
